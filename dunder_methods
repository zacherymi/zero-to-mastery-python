# dunder method examples

class Toy():
    def __init__(self, color, age):
        self.color = color
        self.age = age
        self.my_dict = {
            'name' : 'Yoyo',
            'has pets' : False
        }
    # returns / changes the string representation of the obj
    def __str__(self):
        return(f'{self.color}')
    # changes the length dunder of an object
    def __len__(self):
        return 5
    # allows us to call the action_figure instance like a function
    def __call__(self):
        return('yes?')
    # gets the value of a dictionary at the index given
    def __getitem__(self,i):
        return self.my_dict[i]

action_figure  = Toy('red', 0)

print(str(action_figure))
print(action_figure())
print(action_figure['name'])